<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE hibernate-configuration PUBLIC
	"-//Hibernate/Hibernate Configuration DTD 3.0//EN"
	"http://hibernate.sourceforge.net/hibernate-configuration-3.0.dtd">
<hibernate-configuration>
	<session-factory>
		<!-- 数据库驱动程序 -->
		<property name="hibernate.connection.driver_class">com.mysql.jdbc.Driver</property>
		<!--hibernate.dialect 只是Hibernate使用的数据库方言,就是要用Hibernate连接那种类型的数据库服务器。 -->
		<property name="hibernate.dialect">org.hibernate.dialect.MySQLDialect </property>
	    <!--当调用时hibernate将session绑定到当前线程 jdbc单独调用设置为thread,web环境设置为jta-->
	    <property name="current_session_context_class">thread</property>  
		<!--设置数据库连接 -->
		<property name="hibernate.connection.url">jdbc:mysql://localhost/hbm_test</property>
		<!--数据库是用户名 -->
		<property name="hibernate.connection.username">sshe</property>
		<!--数据库是密码 -->
		<property name="hibernate.connection.password">sshe</property>
		<!--数据库连接池的大小 -->
		<property name="hibernate.connection.pool.size">20 </property>
		<!--是否在控制台显示sql -->
		<property name="hibernate.show_sql">true</property>
		<!--jdbc.fetch_size是指Hibernate每次从数据库中取出并放到JDBC的Statement中的记录条数。Fetch Size设的越大，读数据库的次数越少，速度越快，Fetch Size越小，读数据库的次数越多，速度越慢 -->
		<property name="jdbc.fetch_size">50</property>
		<!--jdbc.batch_size是指Hibernate批量插入,删除和更新时每次操作的记录数。Batch Size越大，批量操作的向数据库发送Sql的次数越少，速度就越快，同样耗用内存就越大 -->
		<property name="jdbc.batch_size">23</property>
		<!--jdbc.use_scrollable_resultset是否允许Hibernate用JDBC的可滚动的结果集。对分页的结果集。对分页时的设置非常有帮助 -->
		<property name="jdbc.use_scrollable_resultset">false</property>
		<!--connection.useUnicode连接数据库时是否使用Unicode编码 -->
		<property name="Connection.useUnicode">true </property>
		<!--connection.characterEncoding连接数据库时数据的传输字符集编码方式 -->
		<property name="connection.characterEncoding">UTF-8</property>

		<!-- hibernate.hbm2ddl.auto实体映射数据库-->
		<property name="hibernate.hbm2ddl.auto">update</property>
		
		<!-- 客户和订单结构 -->
		<mapping class="com.gc.entity.Customer"/>
		<mapping class="com.gc.entity.Order"/>
		
		<!-- 员工和部门结构 -->
		<mapping class="com.gc.entity.Emp"/>
		<mapping class="com.gc.entity.Dept"/>
		
		<!--   -->
		<mapping class="com.gc.entity.Person"/>
		<mapping class="com.gc.entity.Address"/>
		
		<mapping class="com.gc.entity.Category"/>

	</session-factory>
</hibernate-configuration>